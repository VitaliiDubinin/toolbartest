# yaml-language-server: $schema=https://raw.githubusercontent.com/mui/mui-toolpad/v0.1.51/docs/schemas/v1/definitions.json#properties/Page

apiVersion: v1
kind: page
spec:
  title: schedules
  content:
    - component: Button
      name: button
      props:
        content: test API
        loading: false
        onClick:
          $$jsExpressionAction: stopFindAll.refetch()
    - component: DataGrid
      name: dataStopGrid
      props:
        rows:
          $$jsExpression: |
            stopFindAll.data
        columns:
          - field: number
            type: number
          - field: abbreviation
            type: string
          - field: address
            type: string
          - field: depot
            type: boolean
          - field: id
            type: number
          - field: name
            type: string
          - field: description
            type: json
          - field: creator
            type: number
          - field: locales
            type: json
          - field: active
            type: boolean

        rowsSource: dataProvider
        parameters:
          - name: sid
            value: 6

        dataProviderId: dataProviderStopAll.ts:default
        hideToolbar: false
        loading: false
        height: 302
    - component: TextField
      name: textField
      props:
        defaultValue:
          $$jsExpression: (!dataStopGrid.selection) === true ? "no data
            selected":dataStopGrid.selection.id
        disabled: false
    - component: DataGrid
      name: relatedStopPointGrid
      props:
        columns:
          - field: id
            type: number
          - field: name
            type: string
          - field: description
            type: json
          - field: creator
            type: number
          - field: locales
            type: json
          - field: active
            type: boolean
          - field: x
            type: number
          - field: y
            type: number
          - field: number
            type: number
        id: 6
        dataProviderId: dataProviderStopPointRelated.ts:default
        rowsSource: prop
        height: 352
        rows:
          $$jsExpression: queHttpGetRelSP.data
  queries:
    - name: actStopFindAll
      mode: mutation
      query:
        kind: rest
        url:
          $$jsExpression: parameters.api_url+parameters.stop
        searchParams: []
        headers: [{ name: api_key, value: { $$env: API_KEY } }]
        method: GET
      parameters:
        - name: api_url
          value:
            $$env: API_URL
        - name: stop
          value: stop/find-all
    - name: stopFindAll
      mode: query
      query:
        kind: rest
        url:
          $$jsExpression: parameters.api_url+parameters.stop
        searchParams: []
        headers: [{ name: api_key, value: { $$env: API_KEY } }]
        method: GET
        transform: >-
          //return Object.entries(data)

          //const originalArray = data;

          //const transformedArray = originalArray.map(obj => Object.entries(obj));

          //return transformedArray;

          return data.map(elem => {  const persistent = elem.persistent; const copy = { ...persistent, ...elem }; delete copy.persistent; return copy; })
        transformEnabled: true
      parameters:
        - name: api_url
          value:
            $$env: API_URL
        - name: stop
          value: stop/find-all
    - name: stopPointFindAll
      mode: query
      query:
        kind: rest
        url:
          $$jsExpression: parameters.api_url+parameters.stop_point
        searchParams: []
        headers: [{ name: api_key, value: { $$env: API_KEY } }]
        method: GET
        transform: |-
          return data.map(elem => {
            const { persistent, point, ...rest } = elem;
            const combined = { ...persistent, ...point };
            const result = { ...combined, ...rest };
            return result;
          });
        transformEnabled: true
      parameters:
        - name: api_url
          value:
            $$env: API_URL
        - name: stop_point
          value: stop-point/find-all
    - name: actGetRelatedSP
      mode: mutation
      query:
        function: functions2.ts#getRelatedStopPoint
        kind: local
      parameters:
        - name: id
          value:
            $$jsExpression: "5"
    - name: actHttpGetRelSP
      mode: mutation
      query:
        kind: rest
        url:
          $$jsExpression: parameters.api_url+parameters.stop_point_fetch
        headers: [{ name: api_key, value: { $$env: API_KEY } }]
        method: GET
        searchParams: []
      parameters:
        - name: api_url
          value:
            $$env: API_URL
        - name: stop_point_fetch
          value: stop/fetch-stop-points/5
        - name: id
          value:
            $$jsExpression: (!dataStopGrid.selection) === true ? null:dataStopGrid.selection.id
    - name: queHttpGetRelSP
      mode: query
      query:
        kind: rest
        url:
          $$jsExpression: parameters.api_url+parameters.stop_point_fetch+parameters.id
        headers: [{ name: api_key, value: { $$env: API_KEY } }]
        method: GET
        transformEnabled: true
        searchParams: []
        transform: >-
          //return data;

          //return data.map(elem => {  const persistent = elem.persistent; const copy = { ...persistent, ...elem }; delete copy.persistent; return copy; })

          return data.map(elem => {
            const { persistent, point, ...rest } = elem;
            const combined = { ...persistent, ...point };
            const result = { ...combined, ...rest };
            return result;
          });
      parameters:
        - name: api_url
          value:
            $$env: API_URL
        - name: stop_point_fetch
          value: stop/fetch-stop-points/
        - name: id
          value:
            $$jsExpression: (!dataStopGrid.selection) === true ?
              dataStopGrid.rows[0].id:dataStopGrid.selection.id

  display: shell
